import { Component, ContentChildren, Output, EventEmitter, } from '@angular/core';
import { nanoid } from 'nanoid';
import { TabItemComponent } from '../tab-item/tab-item.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TabsComponent {
    constructor() {
        this.tabChange = new EventEmitter();
    }
    ngAfterContentInit() {
        // assign ids
        this.tabs.forEach((tab, index) => {
            tab.id = `radix-id-${nanoid(12)}-1-content-${index}`;
            tab.labelledById = `radix-id-${nanoid(12)}-1-trigger-${index}`;
        });
        // find active tab
        // TODO(enhancement): more declarative way for choosing the initial tab to render
        const activeTabs = this.tabs.filter((tab) => tab.active);
        // set active tab
        if (activeTabs.length !== 1) {
            this.selectTab(this.tabs.first);
        }
    }
    selectTab(tab) {
        this.tabs.forEach((tab) => {
            tab.active = false;
        });
        tab.active = true;
    }
    handleTabClick(tab) {
        if (tab.active)
            return; // don't do anything if clicks the current active tab
        this.tabChange.emit();
        this.selectTab(tab);
    }
}
TabsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TabsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabsComponent, selector: "amplify-tabs", outputs: { tabChange: "tabChange" }, queries: [{ propertyName: "tabs", predicate: TabItemComponent }], ngImport: i0, template: "<div\n  tabindex=\"0\"\n  aria-orientation=\"horizontal\"\n  data-orientation=\"horizontal\"\n  role=\"tablist\"\n  style=\"outline: none\"\n>\n  <div\n    class=\"amplify-flex amplify-tabs\"\n    data-indicator-position=\"top\"\n    style=\"gap: 0px; justify-content: center\"\n  >\n    <div\n      *ngFor=\"let tab of tabs\"\n      class=\"amplify-tabs-item\"\n      data-spacing=\"equal\"\n      data-orientation=\"horizontal\"\n      role=\"tab\"\n      [id]=\"tab.labelledById\"\n      [tabindex]=\"tab.active ? '0' : '1'\"\n      [attr.aria-selected]=\"tab.active\"\n      [attr.aria-controls]=\"tab.id\"\n      [attr.data-state]=\"tab.active ? 'active' : 'inactive'\"\n      (click)=\"handleTabClick(tab)\"\n    >\n      {{ tab.title }}\n    </div>\n  </div>\n</div>\n\n<ng-content></ng-content>\n", directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'amplify-tabs',
                    templateUrl: './tabs.component.html',
                }]
        }], propDecorators: { tabs: [{
                type: ContentChildren,
                args: [TabItemComponent]
            }], tabChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS1hbmd1bGFyL3NyYy9saWIvcHJpbWl0aXZlcy90YWJzL3RhYnMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWktYW5ndWxhci9zcmMvbGliL3ByaW1pdGl2ZXMvdGFicy90YWJzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsZUFBZSxFQUVmLE1BQU0sRUFDTixZQUFZLEdBQ2IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNoQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7O0FBTWxFLE1BQU0sT0FBTyxhQUFhO0lBSjFCO1FBTVksY0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7S0ErQjFDO0lBN0JDLGtCQUFrQjtRQUNoQixhQUFhO1FBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDL0IsR0FBRyxDQUFDLEVBQUUsR0FBRyxZQUFZLE1BQU0sQ0FBQyxFQUFFLENBQUMsY0FBYyxLQUFLLEVBQUUsQ0FBQztZQUNyRCxHQUFHLENBQUMsWUFBWSxHQUFHLFlBQVksTUFBTSxDQUFDLEVBQUUsQ0FBQyxjQUFjLEtBQUssRUFBRSxDQUFDO1FBQ2pFLENBQUMsQ0FBQyxDQUFDO1FBRUgsa0JBQWtCO1FBQ2xCLGlGQUFpRjtRQUNqRixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXpELGlCQUFpQjtRQUNqQixJQUFJLFVBQVUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzNCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNqQztJQUNILENBQUM7SUFFRCxTQUFTLENBQUMsR0FBcUI7UUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUN4QixHQUFHLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNyQixDQUFDLENBQUMsQ0FBQztRQUNILEdBQUcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxjQUFjLENBQUMsR0FBcUI7UUFDbEMsSUFBSSxHQUFHLENBQUMsTUFBTTtZQUFFLE9BQU8sQ0FBQyxxREFBcUQ7UUFDN0UsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7OzJHQWhDVSxhQUFhOytGQUFiLGFBQWEsOEdBQ1AsZ0JBQWdCLDZCQ2hCbkMsc3lCQStCQTs0RkRoQmEsYUFBYTtrQkFKekIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsV0FBVyxFQUFFLHVCQUF1QjtpQkFDckM7OEJBRW9DLElBQUk7c0JBQXRDLGVBQWU7dUJBQUMsZ0JBQWdCO2dCQUN2QixTQUFTO3NCQUFsQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgQ29tcG9uZW50LFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIFF1ZXJ5TGlzdCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbmFub2lkIH0gZnJvbSAnbmFub2lkJztcbmltcG9ydCB7IFRhYkl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi90YWItaXRlbS90YWItaXRlbS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbXBsaWZ5LXRhYnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFicy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFRhYnNDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgQENvbnRlbnRDaGlsZHJlbihUYWJJdGVtQ29tcG9uZW50KSB0YWJzOiBRdWVyeUxpc3Q8VGFiSXRlbUNvbXBvbmVudD47XG4gIEBPdXRwdXQoKSB0YWJDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIC8vIGFzc2lnbiBpZHNcbiAgICB0aGlzLnRhYnMuZm9yRWFjaCgodGFiLCBpbmRleCkgPT4ge1xuICAgICAgdGFiLmlkID0gYHJhZGl4LWlkLSR7bmFub2lkKDEyKX0tMS1jb250ZW50LSR7aW5kZXh9YDtcbiAgICAgIHRhYi5sYWJlbGxlZEJ5SWQgPSBgcmFkaXgtaWQtJHtuYW5vaWQoMTIpfS0xLXRyaWdnZXItJHtpbmRleH1gO1xuICAgIH0pO1xuXG4gICAgLy8gZmluZCBhY3RpdmUgdGFiXG4gICAgLy8gVE9ETyhlbmhhbmNlbWVudCk6IG1vcmUgZGVjbGFyYXRpdmUgd2F5IGZvciBjaG9vc2luZyB0aGUgaW5pdGlhbCB0YWIgdG8gcmVuZGVyXG4gICAgY29uc3QgYWN0aXZlVGFicyA9IHRoaXMudGFicy5maWx0ZXIoKHRhYikgPT4gdGFiLmFjdGl2ZSk7XG5cbiAgICAvLyBzZXQgYWN0aXZlIHRhYlxuICAgIGlmIChhY3RpdmVUYWJzLmxlbmd0aCAhPT0gMSkge1xuICAgICAgdGhpcy5zZWxlY3RUYWIodGhpcy50YWJzLmZpcnN0KTtcbiAgICB9XG4gIH1cblxuICBzZWxlY3RUYWIodGFiOiBUYWJJdGVtQ29tcG9uZW50KSB7XG4gICAgdGhpcy50YWJzLmZvckVhY2goKHRhYikgPT4ge1xuICAgICAgdGFiLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH0pO1xuICAgIHRhYi5hY3RpdmUgPSB0cnVlO1xuICB9XG5cbiAgaGFuZGxlVGFiQ2xpY2sodGFiOiBUYWJJdGVtQ29tcG9uZW50KSB7XG4gICAgaWYgKHRhYi5hY3RpdmUpIHJldHVybjsgLy8gZG9uJ3QgZG8gYW55dGhpbmcgaWYgY2xpY2tzIHRoZSBjdXJyZW50IGFjdGl2ZSB0YWJcbiAgICB0aGlzLnRhYkNoYW5nZS5lbWl0KCk7XG4gICAgdGhpcy5zZWxlY3RUYWIodGFiKTtcbiAgfVxufVxuIiwiPGRpdlxuICB0YWJpbmRleD1cIjBcIlxuICBhcmlhLW9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gIGRhdGEtb3JpZW50YXRpb249XCJob3Jpem9udGFsXCJcbiAgcm9sZT1cInRhYmxpc3RcIlxuICBzdHlsZT1cIm91dGxpbmU6IG5vbmVcIlxuPlxuICA8ZGl2XG4gICAgY2xhc3M9XCJhbXBsaWZ5LWZsZXggYW1wbGlmeS10YWJzXCJcbiAgICBkYXRhLWluZGljYXRvci1wb3NpdGlvbj1cInRvcFwiXG4gICAgc3R5bGU9XCJnYXA6IDBweDsganVzdGlmeS1jb250ZW50OiBjZW50ZXJcIlxuICA+XG4gICAgPGRpdlxuICAgICAgKm5nRm9yPVwibGV0IHRhYiBvZiB0YWJzXCJcbiAgICAgIGNsYXNzPVwiYW1wbGlmeS10YWJzLWl0ZW1cIlxuICAgICAgZGF0YS1zcGFjaW5nPVwiZXF1YWxcIlxuICAgICAgZGF0YS1vcmllbnRhdGlvbj1cImhvcml6b250YWxcIlxuICAgICAgcm9sZT1cInRhYlwiXG4gICAgICBbaWRdPVwidGFiLmxhYmVsbGVkQnlJZFwiXG4gICAgICBbdGFiaW5kZXhdPVwidGFiLmFjdGl2ZSA/ICcwJyA6ICcxJ1wiXG4gICAgICBbYXR0ci5hcmlhLXNlbGVjdGVkXT1cInRhYi5hY3RpdmVcIlxuICAgICAgW2F0dHIuYXJpYS1jb250cm9sc109XCJ0YWIuaWRcIlxuICAgICAgW2F0dHIuZGF0YS1zdGF0ZV09XCJ0YWIuYWN0aXZlID8gJ2FjdGl2ZScgOiAnaW5hY3RpdmUnXCJcbiAgICAgIChjbGljayk9XCJoYW5kbGVUYWJDbGljayh0YWIpXCJcbiAgICA+XG4gICAgICB7eyB0YWIudGl0bGUgfX1cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cblxuPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuIl19