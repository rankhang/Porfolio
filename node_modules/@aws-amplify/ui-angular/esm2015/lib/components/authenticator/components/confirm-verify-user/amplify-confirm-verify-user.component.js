import { Component, HostBinding, Input } from '@angular/core';
import { getFormDataFromEvent, authenticatorTextUtil, } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i3 from "../base-form-fields/base-form-fields.component";
import * as i4 from "../../../../primitives/button/button.component";
import * as i5 from "../../../../primitives/error/error.component";
import * as i6 from "@angular/common";
const { getAccountRecoveryInfoText, getSkipText, getSubmitText } = authenticatorTextUtil;
export class ConfirmVerifyUserComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.headerText = getAccountRecoveryInfoText();
        // translated texts
        this.skipText = getSkipText();
        this.submitText = getSubmitText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmVerifyUserComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmVerifyUserComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmVerifyUserComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ConfirmVerifyUserComponent, selector: "amplify-confirm-verify-user", inputs: { headerText: "headerText" }, host: { properties: { "attr.data-amplify-authenticator-confirmverifyuser": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (input)=\"onInput($event)\" (submit)=\"onSubmit($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-verify-user-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ this.headerText }}</h3>\n    </amplify-slot>\n    <amplify-base-form-fields\n      route=\"confirmVerifyUser\"\n    ></amplify-base-form-fields>\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.skipVerification()\"\n    >\n      {{ skipText }}\n    </button>\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"confirm-verify-user-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n", components: [{ type: i2.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { type: i3.BaseFormFieldsComponent, selector: "amplify-base-form-fields", inputs: ["route"] }, { type: i4.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { type: i5.ErrorComponent, selector: "amplify-error" }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmVerifyUserComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'amplify-confirm-verify-user',
                    templateUrl: './amplify-confirm-verify-user.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-confirmverifyuser']
            }], headerText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeS1jb25maXJtLXZlcmlmeS11c2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXZlcmlmeS11c2VyL2FtcGxpZnktY29uZmlybS12ZXJpZnktdXNlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9hdXRoZW50aWNhdG9yL2NvbXBvbmVudHMvY29uZmlybS12ZXJpZnktdXNlci9hbXBsaWZ5LWNvbmZpcm0tdmVyaWZ5LXVzZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFFTCxvQkFBb0IsRUFDcEIscUJBQXFCLEdBQ3RCLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7O0FBR3pCLE1BQU0sRUFBRSwwQkFBMEIsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLEdBQzlELHFCQUFxQixDQUFDO0FBS3hCLE1BQU0sT0FBTywwQkFBMEI7SUFVckMsWUFBbUIsYUFBbUM7UUFBbkMsa0JBQWEsR0FBYixhQUFhLENBQXNCO1FBUnRELGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDRSxlQUFVLEdBQUcsMEJBQTBCLEVBQUUsQ0FBQztRQUUxRCxtQkFBbUI7UUFDWixhQUFRLEdBQUcsV0FBVyxFQUFFLENBQUM7UUFDekIsZUFBVSxHQUFHLGFBQWEsRUFBRSxDQUFDO0lBR3FCLENBQUM7SUFFMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7SUFDeEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7O3dIQXpCVSwwQkFBMEI7NEdBQTFCLDBCQUEwQix5TUNkdkMsK3BDQXVDQTs0RkR6QmEsMEJBQTBCO2tCQUp0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLFdBQVcsRUFBRSw4Q0FBOEM7aUJBQzVEOzJHQUdDLFFBQVE7c0JBRFAsV0FBVzt1QkFBQyxtREFBbUQ7Z0JBRWhELFVBQVU7c0JBQXpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgRm9ybUZpZWxkc0FycmF5LFxuICBnZXRGb3JtRGF0YUZyb21FdmVudCxcbiAgYXV0aGVudGljYXRvclRleHRVdGlsLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvdWknO1xuaW1wb3J0IHsgQXV0aGVudGljYXRvclNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9zZXJ2aWNlcy9hdXRoZW50aWNhdG9yLnNlcnZpY2UnO1xuXG5jb25zdCB7IGdldEFjY291bnRSZWNvdmVyeUluZm9UZXh0LCBnZXRTa2lwVGV4dCwgZ2V0U3VibWl0VGV4dCB9ID1cbiAgYXV0aGVudGljYXRvclRleHRVdGlsO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW1wbGlmeS1jb25maXJtLXZlcmlmeS11c2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FtcGxpZnktY29uZmlybS12ZXJpZnktdXNlci5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1WZXJpZnlVc2VyQ29tcG9uZW50IHtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtYW1wbGlmeS1hdXRoZW50aWNhdG9yLWNvbmZpcm12ZXJpZnl1c2VyJylcbiAgZGF0YUF0dHIgPSAnJztcbiAgQElucHV0KCkgcHVibGljIGhlYWRlclRleHQgPSBnZXRBY2NvdW50UmVjb3ZlcnlJbmZvVGV4dCgpO1xuXG4gIC8vIHRyYW5zbGF0ZWQgdGV4dHNcbiAgcHVibGljIHNraXBUZXh0ID0gZ2V0U2tpcFRleHQoKTtcbiAgcHVibGljIHN1Ym1pdFRleHQgPSBnZXRTdWJtaXRUZXh0KCk7XG4gIHB1YmxpYyBzb3J0ZWRGb3JtRmllbGRzOiBGb3JtRmllbGRzQXJyYXk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGF1dGhlbnRpY2F0b3I6IEF1dGhlbnRpY2F0b3JTZXJ2aWNlKSB7fVxuXG4gIHB1YmxpYyBnZXQgY29udGV4dCgpIHtcbiAgICByZXR1cm4gdGhpcy5hdXRoZW50aWNhdG9yLnNsb3RDb250ZXh0O1xuICB9XG5cbiAgb25JbnB1dChldmVudDogRXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IDxIVE1MSW5wdXRFbGVtZW50PmV2ZW50LnRhcmdldDtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3IudXBkYXRlRm9ybSh7IG5hbWUsIHZhbHVlIH0pO1xuICB9XG5cbiAgb25TdWJtaXQoZXZlbnQ6IEV2ZW50KTogdm9pZCB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3Iuc3VibWl0Rm9ybShnZXRGb3JtRGF0YUZyb21FdmVudChldmVudCkpO1xuICB9XG59XG4iLCI8Zm9ybSBkYXRhLWFtcGxpZnktZm9ybSAoaW5wdXQpPVwib25JbnB1dCgkZXZlbnQpXCIgKHN1Ym1pdCk9XCJvblN1Ym1pdCgkZXZlbnQpXCI+XG4gIDxmaWVsZHNldFxuICAgIGNsYXNzPVwiYW1wbGlmeS1mbGV4IGFtcGxpZnktYXV0aGVudGljYXRvcl9fY29sdW1uXCJcbiAgICBkYXRhLWFtcGxpZnktZmllbGRzZXRcbiAgICBbZGlzYWJsZWRdPVwiYXV0aGVudGljYXRvci5pc1BlbmRpbmdcIlxuICA+XG4gICAgPGFtcGxpZnktc2xvdCBuYW1lPVwiY29uZmlybS12ZXJpZnktdXNlci1oZWFkZXJcIiBbY29udGV4dF09XCJjb250ZXh0XCI+XG4gICAgICA8aDMgY2xhc3M9XCJhbXBsaWZ5LWhlYWRpbmcgYW1wbGlmeS1oZWFkaW5nLS0zXCI+e3sgdGhpcy5oZWFkZXJUZXh0IH19PC9oMz5cbiAgICA8L2FtcGxpZnktc2xvdD5cbiAgICA8YW1wbGlmeS1iYXNlLWZvcm0tZmllbGRzXG4gICAgICByb3V0ZT1cImNvbmZpcm1WZXJpZnlVc2VyXCJcbiAgICA+PC9hbXBsaWZ5LWJhc2UtZm9ybS1maWVsZHM+XG4gICAgPGJ1dHRvblxuICAgICAgYW1wbGlmeS1idXR0b25cbiAgICAgIHZhcmlhdGlvbj1cInByaW1hcnlcIlxuICAgICAgZnVsbFdpZHRoPVwidHJ1ZVwiXG4gICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgIFtpc0Rpc2FibGVkXT1cImF1dGhlbnRpY2F0b3IuaXNQZW5kaW5nXCJcbiAgICA+XG4gICAgICB7eyBzdWJtaXRUZXh0IH19XG4gICAgPC9idXR0b24+XG5cbiAgICA8YnV0dG9uXG4gICAgICBhbXBsaWZ5LWJ1dHRvblxuICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgIHZhcmlhdGlvbj1cImxpbmtcIlxuICAgICAgZm9udFdlaWdodD1cIm5vcm1hbFwiXG4gICAgICBmdWxsV2lkdGg9XCJ0cnVlXCJcbiAgICAgIChjbGljayk9XCJhdXRoZW50aWNhdG9yLnNraXBWZXJpZmljYXRpb24oKVwiXG4gICAgPlxuICAgICAge3sgc2tpcFRleHQgfX1cbiAgICA8L2J1dHRvbj5cbiAgICA8YW1wbGlmeS1lcnJvciAqbmdJZj1cImF1dGhlbnRpY2F0b3IuZXJyb3JcIj5cbiAgICAgIHt7IGF1dGhlbnRpY2F0b3IuZXJyb3IgfX1cbiAgICA8L2FtcGxpZnktZXJyb3I+XG4gIDwvZmllbGRzZXQ+XG4gIDxhbXBsaWZ5LXNsb3QgbmFtZT1cImNvbmZpcm0tdmVyaWZ5LXVzZXItZm9vdGVyXCIgW2NvbnRleHRdPVwiY29udGV4dFwiPlxuICA8L2FtcGxpZnktc2xvdD5cbjwvZm9ybT5cbiJdfQ==