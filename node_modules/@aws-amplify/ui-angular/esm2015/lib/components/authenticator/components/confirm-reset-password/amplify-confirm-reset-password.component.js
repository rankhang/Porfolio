import { Component, HostBinding, Input } from '@angular/core';
import { getFormDataFromEvent, authenticatorTextUtil, } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i3 from "../base-form-fields/base-form-fields.component";
import * as i4 from "../../../../primitives/button/button.component";
import * as i5 from "../../../../primitives/error/error.component";
import * as i6 from "@angular/common";
const { getBackToSignInText, getResendCodeText, getSubmitText, getResetYourPasswordText, } = authenticatorTextUtil;
export class ConfirmResetPasswordComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.headerText = getResetYourPasswordText();
        // translated strings
        this.backToSignInText = getBackToSignInText();
        this.resendCodeText = getResendCodeText();
        this.submitText = getSubmitText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmResetPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmResetPasswordComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmResetPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ConfirmResetPasswordComponent, selector: "amplify-confirm-reset-password", inputs: { headerText: "headerText" }, host: { properties: { "attr.data-amplify-authenticator-confirmsignin": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-reset-password-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-base-form-fields\n      route=\"confirmResetPassword\"\n    ></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      type=\"button\"\n      (click)=\"authenticator.resendCode()\"\n    >\n      {{ resendCodeText }}\n    </button>\n\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"confirm-reset-password-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n", components: [{ type: i2.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { type: i3.BaseFormFieldsComponent, selector: "amplify-base-form-fields", inputs: ["route"] }, { type: i4.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { type: i5.ErrorComponent, selector: "amplify-error" }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmResetPasswordComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'amplify-confirm-reset-password',
                    templateUrl: './amplify-confirm-reset-password.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-confirmsignin']
            }], headerText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeS1jb25maXJtLXJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXJlc2V0LXBhc3N3b3JkL2FtcGxpZnktY29uZmlybS1yZXNldC1wYXNzd29yZC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9hdXRoZW50aWNhdG9yL2NvbXBvbmVudHMvY29uZmlybS1yZXNldC1wYXNzd29yZC9hbXBsaWZ5LWNvbmZpcm0tcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFFTCxvQkFBb0IsRUFDcEIscUJBQXFCLEdBQ3RCLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7O0FBRXpCLE1BQU0sRUFDSixtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2pCLGFBQWEsRUFDYix3QkFBd0IsR0FDekIsR0FBRyxxQkFBcUIsQ0FBQztBQU0xQixNQUFNLE9BQU8sNkJBQTZCO0lBV3hDLFlBQW1CLGFBQW1DO1FBQW5DLGtCQUFhLEdBQWIsYUFBYSxDQUFzQjtRQVZRLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDNUQsZUFBVSxHQUFHLHdCQUF3QixFQUFFLENBQUM7UUFJeEQscUJBQXFCO1FBQ2QscUJBQWdCLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztRQUN6QyxtQkFBYyxHQUFHLGlCQUFpQixFQUFFLENBQUM7UUFDckMsZUFBVSxHQUFHLGFBQWEsRUFBRSxDQUFDO0lBRXFCLENBQUM7SUFFMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7SUFDeEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7OzJIQTFCVSw2QkFBNkI7K0dBQTdCLDZCQUE2Qix3TUNuQjFDLGdzQ0EyQ0E7NEZEeEJhLDZCQUE2QjtrQkFKekMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZ0NBQWdDO29CQUMxQyxXQUFXLEVBQUUsaURBQWlEO2lCQUMvRDsyR0FFK0QsUUFBUTtzQkFBckUsV0FBVzt1QkFBQywrQ0FBK0M7Z0JBQzVDLFVBQVU7c0JBQXpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXV0aGVudGljYXRvclNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9zZXJ2aWNlcy9hdXRoZW50aWNhdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHtcbiAgRm9ybUZpZWxkc0FycmF5LFxuICBnZXRGb3JtRGF0YUZyb21FdmVudCxcbiAgYXV0aGVudGljYXRvclRleHRVdGlsLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvdWknO1xuXG5jb25zdCB7XG4gIGdldEJhY2tUb1NpZ25JblRleHQsXG4gIGdldFJlc2VuZENvZGVUZXh0LFxuICBnZXRTdWJtaXRUZXh0LFxuICBnZXRSZXNldFlvdXJQYXNzd29yZFRleHQsXG59ID0gYXV0aGVudGljYXRvclRleHRVdGlsO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbXBsaWZ5LWNvbmZpcm0tcmVzZXQtcGFzc3dvcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vYW1wbGlmeS1jb25maXJtLXJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlybVJlc2V0UGFzc3dvcmRDb21wb25lbnQge1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1hbXBsaWZ5LWF1dGhlbnRpY2F0b3ItY29uZmlybXNpZ25pbicpIGRhdGFBdHRyID0gJyc7XG4gIEBJbnB1dCgpIHB1YmxpYyBoZWFkZXJUZXh0ID0gZ2V0UmVzZXRZb3VyUGFzc3dvcmRUZXh0KCk7XG5cbiAgcHVibGljIHNvcnRlZEZvcm1GaWVsZHM6IEZvcm1GaWVsZHNBcnJheTtcblxuICAvLyB0cmFuc2xhdGVkIHN0cmluZ3NcbiAgcHVibGljIGJhY2tUb1NpZ25JblRleHQgPSBnZXRCYWNrVG9TaWduSW5UZXh0KCk7XG4gIHB1YmxpYyByZXNlbmRDb2RlVGV4dCA9IGdldFJlc2VuZENvZGVUZXh0KCk7XG4gIHB1YmxpYyBzdWJtaXRUZXh0ID0gZ2V0U3VibWl0VGV4dCgpO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBhdXRoZW50aWNhdG9yOiBBdXRoZW50aWNhdG9yU2VydmljZSkge31cblxuICBwdWJsaWMgZ2V0IGNvbnRleHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRvci5zbG90Q29udGV4dDtcbiAgfVxuXG4gIG9uSW5wdXQoZXZlbnQ6IEV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSA8SFRNTElucHV0RWxlbWVudD5ldmVudC50YXJnZXQ7XG4gICAgdGhpcy5hdXRoZW50aWNhdG9yLnVwZGF0ZUZvcm0oeyBuYW1lLCB2YWx1ZSB9KTtcbiAgfVxuXG4gIG9uU3VibWl0KGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5hdXRoZW50aWNhdG9yLnN1Ym1pdEZvcm0oZ2V0Rm9ybURhdGFGcm9tRXZlbnQoZXZlbnQpKTtcbiAgfVxufVxuIiwiPGZvcm0gZGF0YS1hbXBsaWZ5LWZvcm0gKHN1Ym1pdCk9XCJvblN1Ym1pdCgkZXZlbnQpXCIgKGlucHV0KT1cIm9uSW5wdXQoJGV2ZW50KVwiPlxuICA8ZmllbGRzZXRcbiAgICBjbGFzcz1cImFtcGxpZnktZmxleCBhbXBsaWZ5LWF1dGhlbnRpY2F0b3JfX2NvbHVtblwiXG4gICAgZGF0YS1hbXBsaWZ5LWZpZWxkc2V0XG4gICAgW2Rpc2FibGVkXT1cImF1dGhlbnRpY2F0b3IuaXNQZW5kaW5nXCJcbiAgPlxuICAgIDxhbXBsaWZ5LXNsb3QgbmFtZT1cImNvbmZpcm0tcmVzZXQtcGFzc3dvcmQtaGVhZGVyXCIgW2NvbnRleHRdPVwiY29udGV4dFwiPlxuICAgICAgPGgzIGNsYXNzPVwiYW1wbGlmeS1oZWFkaW5nIGFtcGxpZnktaGVhZGluZy0tM1wiPnt7IGhlYWRlclRleHQgfX08L2gzPlxuICAgIDwvYW1wbGlmeS1zbG90PlxuXG4gICAgPGFtcGxpZnktYmFzZS1mb3JtLWZpZWxkc1xuICAgICAgcm91dGU9XCJjb25maXJtUmVzZXRQYXNzd29yZFwiXG4gICAgPjwvYW1wbGlmeS1iYXNlLWZvcm0tZmllbGRzPlxuXG4gICAgPGJ1dHRvblxuICAgICAgYW1wbGlmeS1idXR0b25cbiAgICAgIHZhcmlhdGlvbj1cInByaW1hcnlcIlxuICAgICAgZnVsbFdpZHRoPVwidHJ1ZVwiXG4gICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgIFtpc0Rpc2FibGVkXT1cImF1dGhlbnRpY2F0b3IuaXNQZW5kaW5nXCJcbiAgICA+XG4gICAgICB7eyBzdWJtaXRUZXh0IH19XG4gICAgPC9idXR0b24+XG5cbiAgICA8YnV0dG9uXG4gICAgICBhbXBsaWZ5LWJ1dHRvblxuICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgIHZhcmlhdGlvbj1cImxpbmtcIlxuICAgICAgZm9udFdlaWdodD1cIm5vcm1hbFwiXG4gICAgICBmdWxsV2lkdGg9XCJ0cnVlXCJcbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgKGNsaWNrKT1cImF1dGhlbnRpY2F0b3IucmVzZW5kQ29kZSgpXCJcbiAgICA+XG4gICAgICB7eyByZXNlbmRDb2RlVGV4dCB9fVxuICAgIDwvYnV0dG9uPlxuXG4gICAgPGFtcGxpZnktZXJyb3IgKm5nSWY9XCJhdXRoZW50aWNhdG9yLmVycm9yXCI+XG4gICAgICB7eyBhdXRoZW50aWNhdG9yLmVycm9yIH19XG4gICAgPC9hbXBsaWZ5LWVycm9yPlxuICA8L2ZpZWxkc2V0PlxuICA8YW1wbGlmeS1zbG90IG5hbWU9XCJjb25maXJtLXJlc2V0LXBhc3N3b3JkLWZvb3RlclwiIFtjb250ZXh0XT1cImNvbnRleHRcIj5cbiAgPC9hbXBsaWZ5LXNsb3Q+XG48L2Zvcm0+XG4iXX0=