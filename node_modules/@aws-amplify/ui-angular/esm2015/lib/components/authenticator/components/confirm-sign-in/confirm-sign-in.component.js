import { Component, HostBinding } from '@angular/core';
import { getActorContext, getFormDataFromEvent, authenticatorTextUtil, } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/authenticator.service";
import * as i2 from "../../../../utilities/amplify-slot/amplify-slot.component";
import * as i3 from "../base-form-fields/base-form-fields.component";
import * as i4 from "../../../../primitives/button/button.component";
import * as i5 from "../../../../primitives/error/error.component";
import * as i6 from "@angular/common";
const { getConfirmText, getBackToSignInText, getChallengeText } = authenticatorTextUtil;
export class ConfirmSignInComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.confirmText = getConfirmText();
        this.backToSignInText = getBackToSignInText();
    }
    ngOnInit() {
        this.setHeaderText();
    }
    get context() {
        return this.authenticator.slotContext;
    }
    setHeaderText() {
        const state = this.authenticator.authState;
        const actorContext = getActorContext(state);
        const { challengeName } = actorContext;
        this.headerText = getChallengeText(challengeName);
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmSignInComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmSignInComponent, deps: [{ token: i1.AuthenticatorService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmSignInComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ConfirmSignInComponent, selector: "amplify-confirm-sign-in", host: { properties: { "attr.data-amplify-authenticator-confirmsignin": "this.dataAttr" } }, ngImport: i0, template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-sign-in-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n    <amplify-base-form-fields route=\"confirmSignIn\"></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ confirmText }}\n    </button>\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      (click)=\"authenticator.toSignIn()\"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot\n    name=\"confirm-sign-in-footer\"\n    [context]=\"context\"\n  ></amplify-slot>\n</form>\n", components: [{ type: i2.AmplifySlotComponent, selector: "amplify-slot", inputs: ["name", "context"] }, { type: i3.BaseFormFieldsComponent, selector: "amplify-base-form-fields", inputs: ["route"] }, { type: i4.ButtonComponent, selector: "button[amplify-button]", inputs: ["type", "fullWidth", "isDisabled", "size", "variation", "fontWeight"] }, { type: i5.ErrorComponent, selector: "amplify-error" }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmSignInComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'amplify-confirm-sign-in',
                    templateUrl: './confirm-sign-in.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.AuthenticatorService }]; }, propDecorators: { dataAttr: [{
                type: HostBinding,
                args: ['attr.data-amplify-authenticator-confirmsignin']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1zaWduLWluLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXNpZ24taW4vY29uZmlybS1zaWduLWluLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXNpZ24taW4vY29uZmlybS1zaWduLWluLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFFTCxlQUFlLEVBQ2Ysb0JBQW9CLEVBRXBCLHFCQUFxQixHQUN0QixNQUFNLGlCQUFpQixDQUFDOzs7Ozs7OztBQUd6QixNQUFNLEVBQUUsY0FBYyxFQUFFLG1CQUFtQixFQUFFLGdCQUFnQixFQUFFLEdBQzdELHFCQUFxQixDQUFDO0FBTXhCLE1BQU0sT0FBTyxzQkFBc0I7SUFTakMsWUFBbUIsYUFBbUM7UUFBbkMsa0JBQWEsR0FBYixhQUFhLENBQXNCO1FBUlEsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUlyRSxnQkFBVyxHQUFHLGNBQWMsRUFBRSxDQUFDO1FBQy9CLHFCQUFnQixHQUFHLG1CQUFtQixFQUFFLENBQUM7SUFHUyxDQUFDO0lBRTFELFFBQVE7UUFDTixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxhQUFhO1FBQ1gsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFDM0MsTUFBTSxZQUFZLEdBQUcsZUFBZSxDQUFDLEtBQUssQ0FBa0IsQ0FBQztRQUM3RCxNQUFNLEVBQUUsYUFBYSxFQUFFLEdBQUcsWUFBWSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxVQUFVLEdBQUcsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7O29IQW5DVSxzQkFBc0I7d0dBQXRCLHNCQUFzQiwySkNqQm5DLDRvQ0F1Q0E7NEZEdEJhLHNCQUFzQjtrQkFKbEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxXQUFXLEVBQUUsa0NBQWtDO2lCQUNoRDsyR0FFK0QsUUFBUTtzQkFBckUsV0FBVzt1QkFBQywrQ0FBK0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEZvcm1GaWVsZHNBcnJheSxcbiAgZ2V0QWN0b3JDb250ZXh0LFxuICBnZXRGb3JtRGF0YUZyb21FdmVudCxcbiAgU2lnbkluQ29udGV4dCxcbiAgYXV0aGVudGljYXRvclRleHRVdGlsLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvdWknO1xuaW1wb3J0IHsgQXV0aGVudGljYXRvclNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9zZXJ2aWNlcy9hdXRoZW50aWNhdG9yLnNlcnZpY2UnO1xuXG5jb25zdCB7IGdldENvbmZpcm1UZXh0LCBnZXRCYWNrVG9TaWduSW5UZXh0LCBnZXRDaGFsbGVuZ2VUZXh0IH0gPVxuICBhdXRoZW50aWNhdG9yVGV4dFV0aWw7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FtcGxpZnktY29uZmlybS1zaWduLWluJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbmZpcm0tc2lnbi1pbi5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1TaWduSW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1hbXBsaWZ5LWF1dGhlbnRpY2F0b3ItY29uZmlybXNpZ25pbicpIGRhdGFBdHRyID0gJyc7XG5cbiAgLy8gdHJhbnNsYXRlZCB0ZXh0c1xuICBwdWJsaWMgaGVhZGVyVGV4dDogc3RyaW5nO1xuICBwdWJsaWMgY29uZmlybVRleHQgPSBnZXRDb25maXJtVGV4dCgpO1xuICBwdWJsaWMgYmFja1RvU2lnbkluVGV4dCA9IGdldEJhY2tUb1NpZ25JblRleHQoKTtcbiAgcHVibGljIHNvcnRlZEZvcm1GaWVsZHM6IEZvcm1GaWVsZHNBcnJheTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgYXV0aGVudGljYXRvcjogQXV0aGVudGljYXRvclNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5zZXRIZWFkZXJUZXh0KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGNvbnRleHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRvci5zbG90Q29udGV4dDtcbiAgfVxuXG4gIHNldEhlYWRlclRleHQoKTogdm9pZCB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLmF1dGhlbnRpY2F0b3IuYXV0aFN0YXRlO1xuICAgIGNvbnN0IGFjdG9yQ29udGV4dCA9IGdldEFjdG9yQ29udGV4dChzdGF0ZSkgYXMgU2lnbkluQ29udGV4dDtcbiAgICBjb25zdCB7IGNoYWxsZW5nZU5hbWUgfSA9IGFjdG9yQ29udGV4dDtcbiAgICB0aGlzLmhlYWRlclRleHQgPSBnZXRDaGFsbGVuZ2VUZXh0KGNoYWxsZW5nZU5hbWUpO1xuICB9XG5cbiAgb25JbnB1dChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IDxIVE1MSW5wdXRFbGVtZW50PmV2ZW50LnRhcmdldDtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3IudXBkYXRlRm9ybSh7IG5hbWUsIHZhbHVlIH0pO1xuICB9XG5cbiAgb25TdWJtaXQoZXZlbnQ6IEV2ZW50KTogdm9pZCB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmF1dGhlbnRpY2F0b3Iuc3VibWl0Rm9ybShnZXRGb3JtRGF0YUZyb21FdmVudChldmVudCkpO1xuICB9XG59XG4iLCI8Zm9ybSBkYXRhLWFtcGxpZnktZm9ybSAoc3VibWl0KT1cIm9uU3VibWl0KCRldmVudClcIiAoaW5wdXQpPVwib25JbnB1dCgkZXZlbnQpXCI+XG4gIDxmaWVsZHNldFxuICAgIGNsYXNzPVwiYW1wbGlmeS1mbGV4IGFtcGxpZnktYXV0aGVudGljYXRvcl9fY29sdW1uXCJcbiAgICBkYXRhLWFtcGxpZnktZmllbGRzZXRcbiAgICBbZGlzYWJsZWRdPVwiYXV0aGVudGljYXRvci5pc1BlbmRpbmdcIlxuICA+XG4gICAgPGFtcGxpZnktc2xvdCBuYW1lPVwiY29uZmlybS1zaWduLWluLWhlYWRlclwiIFtjb250ZXh0XT1cImNvbnRleHRcIj5cbiAgICAgIDxoMyBjbGFzcz1cImFtcGxpZnktaGVhZGluZyBhbXBsaWZ5LWhlYWRpbmctLTNcIj57eyBoZWFkZXJUZXh0IH19PC9oMz5cbiAgICA8L2FtcGxpZnktc2xvdD5cbiAgICA8YW1wbGlmeS1iYXNlLWZvcm0tZmllbGRzIHJvdXRlPVwiY29uZmlybVNpZ25JblwiPjwvYW1wbGlmeS1iYXNlLWZvcm0tZmllbGRzPlxuXG4gICAgPGJ1dHRvblxuICAgICAgYW1wbGlmeS1idXR0b25cbiAgICAgIHZhcmlhdGlvbj1cInByaW1hcnlcIlxuICAgICAgZnVsbFdpZHRoPVwidHJ1ZVwiXG4gICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgIFtpc0Rpc2FibGVkXT1cImF1dGhlbnRpY2F0b3IuaXNQZW5kaW5nXCJcbiAgICA+XG4gICAgICB7eyBjb25maXJtVGV4dCB9fVxuICAgIDwvYnV0dG9uPlxuICAgIDxidXR0b25cbiAgICAgIGFtcGxpZnktYnV0dG9uXG4gICAgICBzaXplPVwic21hbGxcIlxuICAgICAgdmFyaWF0aW9uPVwibGlua1wiXG4gICAgICBmb250V2VpZ2h0PVwibm9ybWFsXCJcbiAgICAgIGZ1bGxXaWR0aD1cInRydWVcIlxuICAgICAgKGNsaWNrKT1cImF1dGhlbnRpY2F0b3IudG9TaWduSW4oKVwiXG4gICAgPlxuICAgICAge3sgYmFja1RvU2lnbkluVGV4dCB9fVxuICAgIDwvYnV0dG9uPlxuICAgIDxhbXBsaWZ5LWVycm9yICpuZ0lmPVwiYXV0aGVudGljYXRvci5lcnJvclwiPlxuICAgICAge3sgYXV0aGVudGljYXRvci5lcnJvciB9fVxuICAgIDwvYW1wbGlmeS1lcnJvcj5cbiAgPC9maWVsZHNldD5cbiAgPGFtcGxpZnktc2xvdFxuICAgIG5hbWU9XCJjb25maXJtLXNpZ24taW4tZm9vdGVyXCJcbiAgICBbY29udGV4dF09XCJjb250ZXh0XCJcbiAgPjwvYW1wbGlmeS1zbG90PlxuPC9mb3JtPlxuIl19