import { Component, HostBinding, Input, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/custom-components.service";
import * as i2 from "@angular/common";
export class AmplifySlotComponent {
    constructor(propService) {
        this.propService = propService;
        this.display = 'contents';
        this.isOverriden = false;
    }
    ngAfterContentInit() {
        const customComponents = this.propService.customComponents;
        const overridingComponent = customComponents[this.name];
        if (overridingComponent) {
            this.overridingComponent = overridingComponent;
            this.isOverriden = true;
        }
    }
}
AmplifySlotComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AmplifySlotComponent, deps: [{ token: i1.CustomComponentsService }], target: i0.ɵɵFactoryTarget.Component });
AmplifySlotComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AmplifySlotComponent, selector: "amplify-slot", inputs: { name: "name", context: "context" }, host: { properties: { "style.display": "this.display" } }, ngImport: i0, template: "<!-- \n  if slot isn't overwritten, we display the the default coponent, which is the \n  children passed onto this component.\n-->\n<ng-content *ngIf=\"!isOverriden\"></ng-content>\n\n<!-- If slot is overwritten, we render that instead. -->\n<ng-container\n  *ngIf=\"isOverriden\"\n  [ngTemplateOutlet]=\"overridingComponent\"\n  [ngTemplateOutletContext]=\"context\"\n></ng-container>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AmplifySlotComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'amplify-slot',
                    templateUrl: './amplify-slot.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.CustomComponentsService }]; }, propDecorators: { name: [{
                type: Input
            }], context: [{
                type: Input
            }], display: [{
                type: HostBinding,
                args: ['style.display']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeS1zbG90LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi91dGlsaXRpZXMvYW1wbGlmeS1zbG90L2FtcGxpZnktc2xvdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS1hbmd1bGFyL3NyYy9saWIvdXRpbGl0aWVzL2FtcGxpZnktc2xvdC9hbXBsaWZ5LXNsb3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxHQUVOLE1BQU0sZUFBZSxDQUFDOzs7O0FBT3ZCLE1BQU0sT0FBTyxvQkFBb0I7SUFTL0IsWUFBb0IsV0FBb0M7UUFBcEMsZ0JBQVcsR0FBWCxXQUFXLENBQXlCO1FBTDFCLFlBQU8sR0FBRyxVQUFVLENBQUM7UUFHNUMsZ0JBQVcsR0FBWSxLQUFLLENBQUM7SUFFdUIsQ0FBQztJQUU1RCxrQkFBa0I7UUFDaEIsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDO1FBQzNELE1BQU0sbUJBQW1CLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXhELElBQUksbUJBQW1CLEVBQUU7WUFDdkIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDO1lBQy9DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7a0hBbkJVLG9CQUFvQjtzR0FBcEIsb0JBQW9CLDZKQ2JqQyxzWUFZQTs0RkRDYSxvQkFBb0I7a0JBSmhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLFdBQVcsRUFBRSwrQkFBK0I7aUJBQzdDOzhHQUVVLElBQUk7c0JBQVosS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBRXdCLE9BQU87c0JBQXBDLFdBQVc7dUJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyQ29udGVudEluaXQsXG4gIENvbXBvbmVudCxcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBUZW1wbGF0ZVJlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDdXN0b21Db21wb25lbnRzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2N1c3RvbS1jb21wb25lbnRzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbXBsaWZ5LXNsb3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vYW1wbGlmeS1zbG90LmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQW1wbGlmeVNsb3RDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBjb250ZXh0OiBSZWNvcmQ8UHJvcGVydHlLZXksIGFueT47XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5kaXNwbGF5JykgZGlzcGxheSA9ICdjb250ZW50cyc7XG5cbiAgcHVibGljIG92ZXJyaWRpbmdDb21wb25lbnQ6IFRlbXBsYXRlUmVmPGFueT47XG4gIHB1YmxpYyBpc092ZXJyaWRlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJvcFNlcnZpY2U6IEN1c3RvbUNvbXBvbmVudHNTZXJ2aWNlKSB7fVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBjdXN0b21Db21wb25lbnRzID0gdGhpcy5wcm9wU2VydmljZS5jdXN0b21Db21wb25lbnRzO1xuICAgIGNvbnN0IG92ZXJyaWRpbmdDb21wb25lbnQgPSBjdXN0b21Db21wb25lbnRzW3RoaXMubmFtZV07XG5cbiAgICBpZiAob3ZlcnJpZGluZ0NvbXBvbmVudCkge1xuICAgICAgdGhpcy5vdmVycmlkaW5nQ29tcG9uZW50ID0gb3ZlcnJpZGluZ0NvbXBvbmVudDtcbiAgICAgIHRoaXMuaXNPdmVycmlkZW4gPSB0cnVlO1xuICAgIH1cbiAgfVxufVxuIiwiPCEtLSBcbiAgaWYgc2xvdCBpc24ndCBvdmVyd3JpdHRlbiwgd2UgZGlzcGxheSB0aGUgdGhlIGRlZmF1bHQgY29wb25lbnQsIHdoaWNoIGlzIHRoZSBcbiAgY2hpbGRyZW4gcGFzc2VkIG9udG8gdGhpcyBjb21wb25lbnQuXG4tLT5cbjxuZy1jb250ZW50ICpuZ0lmPVwiIWlzT3ZlcnJpZGVuXCI+PC9uZy1jb250ZW50PlxuXG48IS0tIElmIHNsb3QgaXMgb3ZlcndyaXR0ZW4sIHdlIHJlbmRlciB0aGF0IGluc3RlYWQuIC0tPlxuPG5nLWNvbnRhaW5lclxuICAqbmdJZj1cImlzT3ZlcnJpZGVuXCJcbiAgW25nVGVtcGxhdGVPdXRsZXRdPVwib3ZlcnJpZGluZ0NvbXBvbmVudFwiXG4gIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJjb250ZXh0XCJcbj48L25nLWNvbnRhaW5lcj5cbiJdfQ==