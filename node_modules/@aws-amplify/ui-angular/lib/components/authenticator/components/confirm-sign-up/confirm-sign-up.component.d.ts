import { AuthenticatorService } from '../../../../services/authenticator.service';
import { FormFieldsArray } from '@aws-amplify/ui';
import * as i0 from "@angular/core";
export declare class ConfirmSignUpComponent {
    authenticator: AuthenticatorService;
    dataAttr: string;
    resendCodeText: string;
    confirmText: string;
    sortedFormFields: FormFieldsArray;
    constructor(authenticator: AuthenticatorService);
    get context(): {
        $implicit: import("@aws-amplify/ui").AuthenticatorServiceFacade;
        signOut: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        initializeMachine: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        resendCode: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        submitForm: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        updateForm: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        updateBlur: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        toFederatedSignIn: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        toResetPassword: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        toSignIn: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        toSignUp: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        skipVerification: (data?: import("@aws-amplify/ui").AuthEventData) => void;
        authStatus: "authenticated" | "configuring" | "unauthenticated";
        codeDeliveryDetails: import("@aws-amplify/ui").CodeDeliveryDetails;
        error: string;
        hasValidationErrors: boolean;
        isPending: boolean;
        route: import("@aws-amplify/ui").AuthenticatorRoute;
        socialProviders: import("@aws-amplify/ui").SocialProvider[];
        totpSecretCode: string;
        unverifiedContactMethods: import("@aws-amplify/ui").UnverifiedContactMethods;
        user: import("@aws-amplify/ui").AmplifyUser;
        validationErrors: import("@aws-amplify/ui").ValidationError;
    };
    get confirmSignUpHeading(): string;
    get subtitleText(): string;
    onInput(event: Event): void;
    onSubmit(event: Event): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConfirmSignUpComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConfirmSignUpComponent, "amplify-confirm-sign-up", never, {}, {}, never, never>;
}
